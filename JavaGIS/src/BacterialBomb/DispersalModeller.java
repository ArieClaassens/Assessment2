/*
 * Copyright (C) 2014 Student 200825599: <a href="mailto:gy13awc@leeds.ac.uk">gy13awc@leeds.ac.uk</a>
 * University of Leeds, Leeds, West Yorkshire, UK.
 * All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package BacterialBomb;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author Student 200825599: <a href="mailto:gy13awc@leeds.ac.uk">gy13awc@leeds.ac.uk</a>
 */
public class DispersalModeller extends javax.swing.JFrame {

    /**
     * Creates new form DispersalModeller
     */
    public DispersalModeller() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aboutDialog = new javax.swing.JDialog();
        jMenuItem5 = new javax.swing.JMenuItem();
        jFileChooser = new javax.swing.JFileChooser();
        jFileSaver = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabelXPos = new javax.swing.JLabel();
        jTextFieldXPos = new javax.swing.JTextField();
        jLabelYPos = new javax.swing.JLabel();
        jTextFieldYPos = new javax.swing.JTextField();
        jSliderEastProbability = new javax.swing.JSlider();
        jSliderSouthProbability = new javax.swing.JSlider();
        jSliderWestProbability = new javax.swing.JSlider();
        jLabelNorthProbability = new javax.swing.JLabel();
        jLabelEastProbability = new javax.swing.JLabel();
        jLabelSouthProbability = new javax.swing.JLabel();
        jLabelWestProbability = new javax.swing.JLabel();
        jSliderNorthProbability = new javax.swing.JSlider();
        jButtonRunModeller = new javax.swing.JButton();
        jTextFieldParticleCount = new javax.swing.JTextField();
        jLabelParticleCount = new javax.swing.JLabel();
        jLabelWestProbability1 = new javax.swing.JLabel();
        jLabelHeightStart = new javax.swing.JLabel();
        jTextFieldStartHeight = new javax.swing.JTextField();
        jTextFieldTotalProbability = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuOpenFile = new javax.swing.JMenuItem();
        jMenuSaveFileAs = new javax.swing.JMenuItem();
        jMenuRunModeller = new javax.swing.JMenuItem();
        jMenuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuEditGenerateRandomData = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuHelpModeller = new javax.swing.JMenuItem();
        jMenuHelpAbout = new javax.swing.JMenuItem();

        aboutDialog.setTitle("About");
        aboutDialog.setAlwaysOnTop(true);
        aboutDialog.setModal(true);

        javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        aboutDialogLayout.setVerticalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jMenuItem5.setText("jMenuItem5");

        jFileChooser.setApproveButtonText("Open Input");
        jFileChooser.setApproveButtonToolTipText("");
        jFileChooser.setCurrentDirectory(new java.io.File("C:\\Git\\Assessment2\\JavaGIS\\src\\BacterialBomb"));
        jFileChooser.setDialogTitle("Choose a file to load for processing");

        jFileSaver.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileSaver.setApproveButtonText("Save output");
        jFileSaver.setApproveButtonToolTipText("");
        jFileSaver.setCurrentDirectory(new java.io.File("C:\\Git\\Assessment2\\JavaGIS\\src\\BacterialBomb"));
        jFileSaver.setDialogTitle("Save modeller output");
        jFileSaver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileSaverActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Biological Agent Dispersal Modeller");
        setLocationByPlatform(true);
        setName("frameMain"); // NOI18N

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(300, 300));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(300, 300));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(300, 300));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jLabelXPos.setText("X Position:");

        jTextFieldXPos.setText("00");
        jTextFieldXPos.setToolTipText("");
        jTextFieldXPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldXPosActionPerformed(evt);
            }
        });

        jLabelYPos.setText("Y Position:");

        jTextFieldYPos.setText("00");
        jTextFieldYPos.setToolTipText("");
        jTextFieldYPos.setMaximumSize(new java.awt.Dimension(20, 20));
        jTextFieldYPos.setName(""); // NOI18N
        jTextFieldYPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldYPosActionPerformed(evt);
            }
        });

        jSliderEastProbability.setMajorTickSpacing(20);
        jSliderEastProbability.setMinorTickSpacing(10);
        jSliderEastProbability.setPaintLabels(true);
        jSliderEastProbability.setPaintTicks(true);
        jSliderEastProbability.setToolTipText("Probability of particle moving in an EASTERN direction");
        jSliderEastProbability.setValue(75);
        jSliderEastProbability.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSliderEastProbabilityMouseReleased(evt);
            }
        });

        jSliderSouthProbability.setMajorTickSpacing(20);
        jSliderSouthProbability.setMinorTickSpacing(10);
        jSliderSouthProbability.setPaintLabels(true);
        jSliderSouthProbability.setPaintTicks(true);
        jSliderSouthProbability.setToolTipText("Probability of particle moving in a SOUTHERN direction");
        jSliderSouthProbability.setValue(10);
        jSliderSouthProbability.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSliderSouthProbabilityMouseReleased(evt);
            }
        });

        jSliderWestProbability.setMajorTickSpacing(20);
        jSliderWestProbability.setMinorTickSpacing(10);
        jSliderWestProbability.setPaintLabels(true);
        jSliderWestProbability.setPaintTicks(true);
        jSliderWestProbability.setToolTipText("Probability of particle moving in a WESTERN direction");
        jSliderWestProbability.setValue(5);
        jSliderWestProbability.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSliderWestProbabilityMouseReleased(evt);
            }
        });

        jLabelNorthProbability.setText("North:");

        jLabelEastProbability.setText("East:");

        jLabelSouthProbability.setText("South:");

        jLabelWestProbability.setText("West:");

        jSliderNorthProbability.setMajorTickSpacing(20);
        jSliderNorthProbability.setMinorTickSpacing(10);
        jSliderNorthProbability.setPaintLabels(true);
        jSliderNorthProbability.setPaintTicks(true);
        jSliderNorthProbability.setToolTipText("Probability of particle moving in an EASTERN direction");
        jSliderNorthProbability.setValue(10);
        jSliderNorthProbability.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSliderNorthProbabilityMouseReleased(evt);
            }
        });

        jButtonRunModeller.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonRunModeller.setText("Run Modeller");
        jButtonRunModeller.setToolTipText("Click this button to run the modeller after setting all your parameters");
        jButtonRunModeller.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonRunModeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunModellerActionPerformed(evt);
            }
        });

        jTextFieldParticleCount.setText("5000");
        jTextFieldParticleCount.setToolTipText("");

        jLabelParticleCount.setText("Particle count:");

        jLabelWestProbability1.setText("TOTAL:");

        jLabelHeightStart.setText("Start height (m):");
        jLabelHeightStart.setToolTipText("");

        jTextFieldStartHeight.setText("75");
        jTextFieldStartHeight.setToolTipText("The height in metres at which the detonation takes place");
        jTextFieldStartHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStartHeightActionPerformed(evt);
            }
        });

        jTextFieldTotalProbability.setText("100");
        jTextFieldTotalProbability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTotalProbabilityActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuOpenFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpenFile.setText("Open File");
        jMenuOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenFileActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuOpenFile);

        jMenuSaveFileAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuSaveFileAs.setText("Save File As");
        jMenuSaveFileAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSaveFileAsActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuSaveFileAs);

        jMenuRunModeller.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuRunModeller.setText("Run Modeller");
        jMenuRunModeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRunModellerActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuRunModeller);

        jMenuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuEditGenerateRandomData.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuEditGenerateRandomData.setText("Generate Random Data");
        jMenuEditGenerateRandomData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuEditGenerateRandomDataActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuEditGenerateRandomData);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuHelpModeller.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuHelpModeller.setText("Modeller Help");
        jMenuHelpModeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpModellerActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuHelpModeller);

        jMenuHelpAbout.setText("About");
        jMenuHelpAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpAboutActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuHelpAbout);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelNorthProbability)
                                    .addComponent(jLabelEastProbability)
                                    .addComponent(jLabelSouthProbability)
                                    .addComponent(jLabelWestProbability)
                                    .addComponent(jLabelWestProbability1)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelXPos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldXPos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelYPos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldYPos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabelParticleCount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldParticleCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelHeightStart)
                        .addGap(2, 2, 2)
                        .addComponent(jTextFieldStartHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRunModeller)
                    .addComponent(jSliderNorthProbability, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderEastProbability, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderSouthProbability, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderWestProbability, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTotalProbability, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSliderNorthProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNorthProbability))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabelEastProbability))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jSliderEastProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSouthProbability)
                            .addComponent(jSliderSouthProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelWestProbability)
                            .addComponent(jSliderWestProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelWestProbability1)
                            .addComponent(jTextFieldTotalProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelXPos)
                            .addComponent(jTextFieldXPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelYPos)
                            .addComponent(jTextFieldYPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldParticleCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelParticleCount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelHeightStart)
                            .addComponent(jTextFieldStartHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButtonRunModeller)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTextFieldStartHeight.getAccessibleContext().setAccessibleName("Start height");

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenFileActionPerformed
        int returnVal = jFileChooser.showOpenDialog(this);
        if (returnVal == jFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            try {
                // What to do with the file, e.g. display it in a TextArea
                //textarea.read( new FileReader( file.getAbsolutePath() ), null );
                FileReader inputFile = new FileReader(file.getAbsolutePath());
                System.out.println("File opened fine -> " + inputFile);
            } catch (IOException ex) {
                System.out.println("Problem accessing file" + file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jMenuOpenFileActionPerformed

    private void jMenuSaveFileAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSaveFileAsActionPerformed
        int returnVal = jFileSaver.showSaveDialog(this);
        if (returnVal == jFileSaver.APPROVE_OPTION) {
            File file2 = jFileSaver.getSelectedFile();
            try {
          // What to do with the file, e.g. display it in a TextArea
                //textarea.read( new FileReader( file.getAbsolutePath() ), null );
                //Overwrite the chosen file, no appending.
                FileWriter writer = new FileWriter(file2,false);
                writer.append("Data inside the file");
                //writer.append(inputFile);
                writer.flush();
                writer.close();
                System.out.println("File saving worked, but did we save the dispersal map contents?");
            } catch (IOException ex) {
                System.out.println("problem accessing file" + file2.getAbsolutePath());
            }
        } else {
            System.out.println("File save cancelled by user.");
        }
    }//GEN-LAST:event_jMenuSaveFileAsActionPerformed

    private void jMenuRunModellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRunModellerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuRunModellerActionPerformed

    private void jMenuHelpAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpAboutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuHelpAboutActionPerformed

    private void jMenuHelpModellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpModellerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuHelpModellerActionPerformed

    private void jMenuEditGenerateRandomDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEditGenerateRandomDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuEditGenerateRandomDataActionPerformed

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        //Close app and exit without any errors
        System.exit(0);
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        //Capture Mouse position relative to tabbed pane and display in a text box
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jTextFieldXPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldXPosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldXPosActionPerformed

    private void jTextFieldYPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldYPosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldYPosActionPerformed

    private void jButtonRunModellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunModellerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRunModellerActionPerformed

    private void jFileSaverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileSaverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFileSaverActionPerformed

    private void jTextFieldStartHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStartHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldStartHeightActionPerformed

    private void jTextFieldTotalProbabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTotalProbabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTotalProbabilityActionPerformed

    private void jSliderNorthProbabilityMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderNorthProbabilityMouseReleased
        jTextFieldTotalProbability.setText(jSliderEastProbability.getValue()+jSliderNorthProbability.getValue()+jSliderWestProbability.getValue()+jSliderSouthProbability.getValue() + "%");
        System.out.println("jTextFieldTotalProbability value is now: " + jTextFieldTotalProbability.getText());
    }//GEN-LAST:event_jSliderNorthProbabilityMouseReleased

    private void jSliderEastProbabilityMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderEastProbabilityMouseReleased
        jTextFieldTotalProbability.setText(jSliderEastProbability.getValue()+jSliderNorthProbability.getValue()+jSliderWestProbability.getValue()+jSliderSouthProbability.getValue() + "%");
        System.out.println("jTextFieldTotalProbability value is now: " + jTextFieldTotalProbability.getText());
    }//GEN-LAST:event_jSliderEastProbabilityMouseReleased

    private void jSliderSouthProbabilityMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderSouthProbabilityMouseReleased
        jTextFieldTotalProbability.setText(jSliderEastProbability.getValue()+jSliderNorthProbability.getValue()+jSliderWestProbability.getValue()+jSliderSouthProbability.getValue() + "%");
        System.out.println("jTextFieldTotalProbability value is now: " + jTextFieldTotalProbability.getText());
    }//GEN-LAST:event_jSliderSouthProbabilityMouseReleased

    private void jSliderWestProbabilityMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderWestProbabilityMouseReleased
        jTextFieldTotalProbability.setText(jSliderEastProbability.getValue()+jSliderNorthProbability.getValue()+jSliderWestProbability.getValue()+jSliderSouthProbability.getValue() + "%");
        System.out.println("jTextFieldTotalProbability value is now: " + jTextFieldTotalProbability.getText());
    }//GEN-LAST:event_jSliderWestProbabilityMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DispersalModeller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DispersalModeller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DispersalModeller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DispersalModeller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DispersalModeller().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JButton jButtonRunModeller;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JFileChooser jFileSaver;
    private javax.swing.JLabel jLabelEastProbability;
    private javax.swing.JLabel jLabelHeightStart;
    private javax.swing.JLabel jLabelNorthProbability;
    private javax.swing.JLabel jLabelParticleCount;
    private javax.swing.JLabel jLabelSouthProbability;
    private javax.swing.JLabel jLabelWestProbability;
    private javax.swing.JLabel jLabelWestProbability1;
    private javax.swing.JLabel jLabelXPos;
    private javax.swing.JLabel jLabelYPos;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuEditGenerateRandomData;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenuItem jMenuHelpAbout;
    private javax.swing.JMenuItem jMenuHelpModeller;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuOpenFile;
    private javax.swing.JMenuItem jMenuRunModeller;
    private javax.swing.JMenuItem jMenuSaveFileAs;
    private javax.swing.JSlider jSliderEastProbability;
    private javax.swing.JSlider jSliderNorthProbability;
    private javax.swing.JSlider jSliderSouthProbability;
    private javax.swing.JSlider jSliderWestProbability;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldParticleCount;
    private javax.swing.JTextField jTextFieldStartHeight;
    private javax.swing.JTextField jTextFieldTotalProbability;
    private javax.swing.JTextField jTextFieldXPos;
    private javax.swing.JTextField jTextFieldYPos;
    // End of variables declaration//GEN-END:variables
}
